% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Classifier.R
\name{Classifier}
\alias{Classifier}
\title{`Classifier` class}
\description{
the `Classifier` class contains supervised classification models
}
\section{Super class}{
\code{\link[learningmachine:Base]{learningmachine::Base}} -> \code{Classifier}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Classifier-new}{\code{Classifier$new()}}
\item \href{#method-Classifier-get_type_prediction_set}{\code{Classifier$get_type_prediction_set()}}
\item \href{#method-Classifier-set_type_prediction_set}{\code{Classifier$set_type_prediction_set()}}
\item \href{#method-Classifier-fit}{\code{Classifier$fit()}}
\item \href{#method-Classifier-predict_proba}{\code{Classifier$predict_proba()}}
\item \href{#method-Classifier-predict}{\code{Classifier$predict()}}
\item \href{#method-Classifier-clone}{\code{Classifier$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="get_B"><a href='../../learningmachine/html/Base.html#method-Base-get_B'><code>learningmachine::Base$get_B()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="get_activ"><a href='../../learningmachine/html/Base.html#method-Base-get_activ'><code>learningmachine::Base$get_activ()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="get_engine"><a href='../../learningmachine/html/Base.html#method-Base-get_engine'><code>learningmachine::Base$get_engine()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="get_level"><a href='../../learningmachine/html/Base.html#method-Base-get_level'><code>learningmachine::Base$get_level()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="get_method"><a href='../../learningmachine/html/Base.html#method-Base-get_method'><code>learningmachine::Base$get_method()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="get_model"><a href='../../learningmachine/html/Base.html#method-Base-get_model'><code>learningmachine::Base$get_model()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="get_name"><a href='../../learningmachine/html/Base.html#method-Base-get_name'><code>learningmachine::Base$get_name()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="get_nb_hidden"><a href='../../learningmachine/html/Base.html#method-Base-get_nb_hidden'><code>learningmachine::Base$get_nb_hidden()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="get_nodes_sim"><a href='../../learningmachine/html/Base.html#method-Base-get_nodes_sim'><code>learningmachine::Base$get_nodes_sim()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="get_params"><a href='../../learningmachine/html/Base.html#method-Base-get_params'><code>learningmachine::Base$get_params()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="get_pi_method"><a href='../../learningmachine/html/Base.html#method-Base-get_pi_method'><code>learningmachine::Base$get_pi_method()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="get_seed"><a href='../../learningmachine/html/Base.html#method-Base-get_seed'><code>learningmachine::Base$get_seed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="get_type"><a href='../../learningmachine/html/Base.html#method-Base-get_type'><code>learningmachine::Base$get_type()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="set_B"><a href='../../learningmachine/html/Base.html#method-Base-set_B'><code>learningmachine::Base$set_B()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="set_activ"><a href='../../learningmachine/html/Base.html#method-Base-set_activ'><code>learningmachine::Base$set_activ()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="set_engine"><a href='../../learningmachine/html/Base.html#method-Base-set_engine'><code>learningmachine::Base$set_engine()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="set_level"><a href='../../learningmachine/html/Base.html#method-Base-set_level'><code>learningmachine::Base$set_level()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="set_method"><a href='../../learningmachine/html/Base.html#method-Base-set_method'><code>learningmachine::Base$set_method()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="set_model"><a href='../../learningmachine/html/Base.html#method-Base-set_model'><code>learningmachine::Base$set_model()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="set_nb_hidden"><a href='../../learningmachine/html/Base.html#method-Base-set_nb_hidden'><code>learningmachine::Base$set_nb_hidden()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="set_nodes_sim"><a href='../../learningmachine/html/Base.html#method-Base-set_nodes_sim'><code>learningmachine::Base$set_nodes_sim()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="set_pi_method"><a href='../../learningmachine/html/Base.html#method-Base-set_pi_method'><code>learningmachine::Base$set_pi_method()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="set_seed"><a href='../../learningmachine/html/Base.html#method-Base-set_seed'><code>learningmachine::Base$set_seed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="learningmachine" data-topic="Base" data-id="summary"><a href='../../learningmachine/html/Base.html#method-Base-summary'><code>learningmachine::Base$summary()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Classifier-new"></a>}}
\if{latex}{\out{\hypertarget{method-Classifier-new}{}}}
\subsection{Method \code{new()}}{
Create a new object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Classifier$new(
  name = "Classifier",
  type = "classification",
  model = NULL,
  method = NULL,
  X_train = NULL,
  y_train = NULL,
  pi_method = c("none", "splitconformal", "kdesplitconformal", "bootsplitconformal",
    "jackknifeplus", "kdejackknifeplus", "bootjackknifeplus", "surrsplitconformal",
    "surrjackknifeplus"),
  level = 95,
  type_prediction_set = c("none", "score"),
  B = 100,
  nb_hidden = 0,
  nodes_sim = c("sobol", "halton", "unif"),
  activ = c("relu", "sigmoid", "tanh", "leakyrelu", "elu", "linear"),
  engine = NULL,
  params = NULL,
  seed = 123
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{name of the class}

\item{\code{type}}{type of supervised learning method implemented}

\item{\code{model}}{fitted model}

\item{\code{method}}{supervised learning method in c('lm', 'ranger', 
'extratrees', 'ridge', 'bcn', 'glmnet', 'krr', 'xgboost')}

\item{\code{X_train}}{training set features; do not modify by hand}

\item{\code{y_train}}{training set response; do not modify by hand}

\item{\code{pi_method}}{type of prediction set in c("splitconformal",
"kdesplitconformal", "bootsplitconformal", "jackknifeplus",
"kdejackknifeplus", "bootjackknifeplus", "surrsplitconformal",
"surrjackknifeplus")}

\item{\code{level}}{an integer; the level of confidence (default is 95, for 95%)
for prediction sets}

\item{\code{type_prediction_set}}{a string; the type of prediction set (currently, only "score" method)}

\item{\code{B}}{an integer; the number of simulations when \code{level} is not \code{NULL}}

\item{\code{nb_hidden}}{number of nodes in the hidden layer, for construction of a quasi-
randomized network}

\item{\code{nodes_sim}}{type of 'simulations' for hidden nodes, if \code{nb_hidden} > 0; 
takes values in c("sobol", "halton", "unif")}

\item{\code{activ}}{activation function's name for the hidden layer, in the construction 
of a quasi-randomized network; takes values in c("relu", "sigmoid", "tanh", "
leakyrelu", "elu", "linear")}

\item{\code{engine}}{contains fit and predic lower-level methods for the given \code{method}; 
do not modify by hand}

\item{\code{params}}{additional parameters passed to \code{method} when calling \code{fit}
do not modify by hand}

\item{\code{seed}}{an integer; reproducibility seed for methods that include 
randomization}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `Classifier` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Classifier-get_type_prediction_set"></a>}}
\if{latex}{\out{\hypertarget{method-Classifier-get_type_prediction_set}{}}}
\subsection{Method \code{get_type_prediction_set()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Classifier$get_type_prediction_set()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Classifier-set_type_prediction_set"></a>}}
\if{latex}{\out{\hypertarget{method-Classifier-set_type_prediction_set}{}}}
\subsection{Method \code{set_type_prediction_set()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Classifier$set_type_prediction_set(type_prediction_set)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Classifier-fit"></a>}}
\if{latex}{\out{\hypertarget{method-Classifier-fit}{}}}
\subsection{Method \code{fit()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Classifier$fit(X, y, B = 100, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Classifier-predict_proba"></a>}}
\if{latex}{\out{\hypertarget{method-Classifier-predict_proba}{}}}
\subsection{Method \code{predict_proba()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Classifier$predict_proba(X, level = 95)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Classifier-predict"></a>}}
\if{latex}{\out{\hypertarget{method-Classifier-predict}{}}}
\subsection{Method \code{predict()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Classifier$predict(X, level = 95)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Classifier-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Classifier-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Classifier$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
